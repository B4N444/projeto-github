package view;

import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.Tarefa;
import dao.DAOTarefa;
import java.awt.Component;
import java.time.LocalTime;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import util.ConversorData;

/**
 *
 * @author User Master
 */
public class ViewPesquisar extends javax.swing.JFrame {

    DAOTarefa dAOTarefa = new DAOTarefa();
    Tarefa tarefa = new Tarefa();
    ArrayList<Tarefa> lista = dAOTarefa.listarTarefaDAO();
    String dataperiodo;

    /**
     * Creates new form viewTarefas
     */
    public ViewPesquisar() {
        initComponents();
        setLocationRelativeTo(this);
        atualizarTabela();
        preencherComboDatas();
        jRBporData.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        btGroupPesquisar = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTFtarefa = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTFdescricao = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabTarefas = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jTFid = new javax.swing.JTextField();
        jDateTarefa = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTFhoraInicio = new javax.swing.JFormattedTextField();
        jTFhoraFim = new javax.swing.JFormattedTextField();
        jPanelPesquisar = new javax.swing.JPanel();
        jPanelPorData = new javax.swing.JPanel();
        jRBporData = new javax.swing.JRadioButton();
        jCBdatas = new javax.swing.JComboBox<>();
        jPanelComandos = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jBtlimpar = new javax.swing.JButton();
        jPanelPorPeriodo = new javax.swing.JPanel();
        jRBporPeriodo = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jDCdtInicio = new com.toedter.calendar.JDateChooser();
        jDCdtFim = new com.toedter.calendar.JDateChooser();
        jCBStatusP = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jBtAtualizar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jBtPesquisar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        jButton5.setText("Editar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5actionEditar(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Pesquisar Tarefas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                windowFechar(evt);
            }
        });

        jLabel2.setText("Tarefa:");

        jTFtarefa.setEnabled(false);

        jLabel3.setText("Descrição:");

        jTFdescricao.setEnabled(false);

        jLabel4.setText("Tarefas:");

        jTabTarefas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tarefas", "Descrição", "Data", "H. Início", "H. Fim", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTabTarefas);
        if (jTabTarefas.getColumnModel().getColumnCount() > 0) {
            jTabTarefas.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTabTarefas.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTabTarefas.getColumnModel().getColumn(2).setPreferredWidth(300);
        }

        jLabel5.setText("ID:");

        jTFid.setEditable(false);
        jTFid.setEnabled(false);

        jDateTarefa.setDateFormatString("dd '/'MM '/'y");
        jDateTarefa.setEnabled(false);

        jLabel6.setText("Data:");

        jLabel7.setText("Hora Fim:");

        jLabel8.setText("Hora Início:");

        try {
            jTFhoraInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTFhoraInicio.setEnabled(false);

        try {
            jTFhoraFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTFhoraFim.setEnabled(false);

        jPanelPesquisar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisar", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jPanelPorData.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Por Data:", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        btGroupPesquisar.add(jRBporData);
        jRBporData.setText("Data:");
        jRBporData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionHablitarPesquisarData(evt);
            }
        });

        jCBdatas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        jCBdatas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBdatasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPorDataLayout = new javax.swing.GroupLayout(jPanelPorData);
        jPanelPorData.setLayout(jPanelPorDataLayout);
        jPanelPorDataLayout.setHorizontalGroup(
            jPanelPorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPorDataLayout.createSequentialGroup()
                .addGroup(jPanelPorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRBporData)
                    .addComponent(jCBdatas, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 79, Short.MAX_VALUE))
        );
        jPanelPorDataLayout.setVerticalGroup(
            jPanelPorDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPorDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRBporData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBdatas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelComandos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Comandos Pesquisar:", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-google-web-search-25.png"))); // NOI18N
        jButton7.setText("Pesquisar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionTarefasPesquisar(evt);
            }
        });

        jBtlimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-broom-25.png"))); // NOI18N
        jBtlimpar.setText("Limpar");
        jBtlimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionLimparCampos(evt);
            }
        });

        javax.swing.GroupLayout jPanelComandosLayout = new javax.swing.GroupLayout(jPanelComandos);
        jPanelComandos.setLayout(jPanelComandosLayout);
        jPanelComandosLayout.setHorizontalGroup(
            jPanelComandosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelComandosLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtlimpar)
                .addGap(43, 43, 43))
        );
        jPanelComandosLayout.setVerticalGroup(
            jPanelComandosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelComandosLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanelComandosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jBtlimpar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPorPeriodo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Por Período:", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        btGroupPesquisar.add(jRBporPeriodo);
        jRBporPeriodo.setText("Dt. Início:");
        jRBporPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionHabilitarPeriodoDatas(evt);
            }
        });

        jLabel1.setText("Dt. Fim");

        jDCdtInicio.setDateFormatString("dd'/'MM'/'y");
        jDCdtInicio.setEnabled(false);

        jDCdtFim.setDateFormatString("dd'/'MM'/'y");
        jDCdtFim.setEnabled(false);

        javax.swing.GroupLayout jPanelPorPeriodoLayout = new javax.swing.GroupLayout(jPanelPorPeriodo);
        jPanelPorPeriodo.setLayout(jPanelPorPeriodoLayout);
        jPanelPorPeriodoLayout.setHorizontalGroup(
            jPanelPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPorPeriodoLayout.createSequentialGroup()
                .addGroup(jPanelPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRBporPeriodo)
                    .addComponent(jDCdtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPorPeriodoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jDCdtFim, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelPorPeriodoLayout.setVerticalGroup(
            jPanelPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPorPeriodoLayout.createSequentialGroup()
                .addGroup(jPanelPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBporPeriodo)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPorPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDCdtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDCdtFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelPesquisarLayout = new javax.swing.GroupLayout(jPanelPesquisar);
        jPanelPesquisar.setLayout(jPanelPesquisarLayout);
        jPanelPesquisarLayout.setHorizontalGroup(
            jPanelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPorData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelPorPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelComandos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelPesquisarLayout.setVerticalGroup(
            jPanelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPesquisarLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanelPorPeriodo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelPorData, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelComandos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jCBStatusP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "PENDENTE", "EM ANDAMENTO", "CONCLUÍDA" }));
        jCBStatusP.setEnabled(false);

        jLabel10.setText("Status");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTFdescricao, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTFtarefa, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFid, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1)
                    .addComponent(jPanelPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jDateTarefa, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTFhoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jTFhoraFim, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jCBStatusP, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFtarefa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTFdescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)
                        .addComponent(jLabel10))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateTarefa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTFhoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTFhoraFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCBStatusP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jBtAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-restart-25.png"))); // NOI18N
        jBtAtualizar.setText("Atualizar");
        jBtAtualizar.setEnabled(false);
        jBtAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionAddTarefas(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-edit-25.png"))); // NOI18N
        jButton4.setText("Editar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionEditar(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-trash-25.png"))); // NOI18N
        jButton6.setText("Excluir");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionExcluirTarefa(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-close-25.png"))); // NOI18N
        jButton3.setText("Fechar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionSair(evt);
            }
        });

        jBtPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icons8-close-25.png"))); // NOI18N
        jBtPesquisar.setText("Tarefa");
        jBtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionVoltarTarefa(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Pesquisar Tarefas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jBtAtualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(14, 14, 14)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtAtualizar)
                    .addComponent(jButton4)
                    .addComponent(jButton6)
                    .addComponent(jButton3)
                    .addComponent(jBtPesquisar)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actionAddTarefas(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionAddTarefas
        salvarTarefas();
        limparCampos();
    }//GEN-LAST:event_actionAddTarefas

    private void actionSair(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionSair
        UIManager.put("OptionPane.yesButtonText", "Sim");
        UIManager.put("OptionPane.noButtonText", "Não");
        int op = JOptionPane.showConfirmDialog(null, "Encerrar Pesquisar Tarefa?", "Atenção", JOptionPane.YES_NO_OPTION);
        if (op == 0) {
            this.dispose();
        }
    }//GEN-LAST:event_actionSair

    private void actionEditar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionEditar
        editarTarefa();
    }//GEN-LAST:event_actionEditar

    private void jButton5actionEditar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5actionEditar
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5actionEditar

    private void actionExcluirTarefa(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionExcluirTarefa

        excluirTarefa();
    }//GEN-LAST:event_actionExcluirTarefa

    private void actionHabilitarPeriodoDatas(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionHabilitarPeriodoDatas
        jDCdtInicio.setEnabled(true);
        jDCdtFim.setEnabled(true);
        jCBdatas.setEnabled(true);
        jCBdatas.setSelectedIndex(0);
    }//GEN-LAST:event_actionHabilitarPeriodoDatas

    private void actionHablitarPesquisarData(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionHablitarPesquisarData
        jCBdatas.setEnabled(true);
        jDCdtInicio.setEnabled(false);
        jDCdtInicio.setDate(null);
        jDCdtFim.setEnabled(false);
        jDCdtFim.setDate(null);
    }//GEN-LAST:event_actionHablitarPesquisarData

    private void actionVoltarTarefa(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionVoltarTarefa
    ViewPrincipal.pesquisarTarefas();
    }//GEN-LAST:event_actionVoltarTarefa

    private void actionTarefasPesquisar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionTarefasPesquisar
        tarefasPesquisar();
    }//GEN-LAST:event_actionTarefasPesquisar

    private void jCBdatasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBdatasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBdatasActionPerformed

    private void actionLimparCampos(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionLimparCampos
        limparcampos();
    }//GEN-LAST:event_actionLimparCampos

    private void windowFechar(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowFechar
        UIManager.put("OptionPane.yesButtonText", "Sim");
        UIManager.put("OptionPane.noButtonText", "Não");
        int op = JOptionPane.showConfirmDialog(null, "Deseja Sair da Janela?", "Atenção", JOptionPane.YES_NO_OPTION);
        if (op == 0) {
           this.dispose();
        }
    }//GEN-LAST:event_windowFechar

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewTarefas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPesquisar().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btGroupPesquisar;
    private javax.swing.JButton jBtAtualizar;
    private javax.swing.JButton jBtPesquisar;
    private javax.swing.JButton jBtlimpar;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jCBStatusP;
    private javax.swing.JComboBox<String> jCBdatas;
    private com.toedter.calendar.JDateChooser jDCdtFim;
    private com.toedter.calendar.JDateChooser jDCdtInicio;
    private com.toedter.calendar.JDateChooser jDateTarefa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelComandos;
    private javax.swing.JPanel jPanelPesquisar;
    private javax.swing.JPanel jPanelPorData;
    private javax.swing.JPanel jPanelPorPeriodo;
    private javax.swing.JRadioButton jRBporData;
    private javax.swing.JRadioButton jRBporPeriodo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFdescricao;
    private javax.swing.JFormattedTextField jTFhoraFim;
    private javax.swing.JFormattedTextField jTFhoraInicio;
    private javax.swing.JTextField jTFid;
    private javax.swing.JTextField jTFtarefa;
    private javax.swing.JTable jTabTarefas;
    // End of variables declaration//GEN-END:variables

    private void salvarTarefas() {
        DateTimeFormatter formatadorHora = DateTimeFormatter.ofPattern("HH:mm");

        Date dataSelecionada = jDateTarefa.getDate();
        String horaInicioText = jTFhoraInicio.getText();
        String horaFimText = jTFhoraFim.getText();

        //Verificação de hora no formato correto !
        LocalTime horaInicio;
        LocalTime horaFim;

        try {
            horaInicio = LocalTime.parse(horaInicioText, formatadorHora);
            horaFim = LocalTime.parse(horaFimText, formatadorHora);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Hora inválida! use o formato HH:mm.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        tarefa.setTitulo(jTFtarefa.getText());
        tarefa.setDescricao(jTFdescricao.getText());
        tarefa.setDataTarefa(ConversorData.converterDateParaLocalDate(dataSelecionada));
        tarefa.setHoraInicio(LocalTime.parse(jTFhoraInicio.getText()));
        tarefa.setHoraFim(LocalTime.parse(jTFhoraFim.getText()));
        tarefa.setStatus(String.valueOf(jCBStatusP.getSelectedItem()));

        if (horaFim.isBefore(horaInicio) || horaFim.equals(horaInicio)) {
            JOptionPane.showMessageDialog(null, "Hora Fim não pode ser menor ou igual a Hora Inicio", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        tarefa.setId(Integer.parseInt(jTFid.getText()));
        if (dAOTarefa.editarTarefaDAO(tarefa)) {
            JOptionPane.showMessageDialog(null, "Tarefa atualizada com sucesso.", "Cadastro", JOptionPane.INFORMATION_MESSAGE);
            limparcampos();
            desabilitarCampos();
            atualizarTabela();

        } else {
            JOptionPane.showMessageDialog(null, "Erro ao Atualizar.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limparCampos() {
        jTFid.setText("");
        jTFtarefa.setText("");
        jTFdescricao.setText("");
        jTFhoraInicio.setText("");
        jTFhoraFim.setText("");
        jDateTarefa.setDate(null);
        jDCdtInicio.setDate(null);
        jDCdtFim.setDate(null);
        jDCdtInicio.setEnabled(false);
        jDCdtFim.setEnabled(false);
        btGroupPesquisar.clearSelection();
        jCBdatas.setSelectedIndex(0);
        jCBdatas.setEnabled(false);
        jRBporData.setSelected(true);
        jCBStatusP.setSelectedIndex(0);

    }

    /**
     * Método carrega tabela preenchida com os dados do banco.
     */
    private void atualizarTabela() {
        DAOTarefa dao = new DAOTarefa();
        lista = dao.listarTarefaDAO();
        DefaultTableModel model = (DefaultTableModel) jTabTarefas.getModel();
        model.setRowCount(0);

        for (Tarefa t : lista) {
            model.addRow(new Object[]{
                t.getId(),
                t.getTitulo(),
                t.getDescricao(),
                t.getDataTarefa(),
                t.getHoraInicio(),
                t.getHoraFim(),
                t.getStatus()
            });
            aplicarFormatoDataBR(jTabTarefas, 3);
        }
    }

    private void editarTarefa() {

        int linha = jTabTarefas.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "você deve selecionar um Registro.", "Erro", JOptionPane.ERROR_MESSAGE);
            desabilitarCampos();
        } else {
            //Pega os dados diretamente da tabela 
            int id = (int) jTabTarefas.getValueAt(linha, 0);
            String titulo = (String) jTabTarefas.getValueAt(linha, 1);
            String descricao = (String) jTabTarefas.getValueAt(linha, 2);
            LocalDate dtTarefa = (LocalDate) jTabTarefas.getValueAt(linha, 3);
            LocalTime hInicio = (LocalTime) jTabTarefas.getValueAt(linha, 4);
            LocalTime hFim = (LocalTime) jTabTarefas.getValueAt(linha, 5);
            String status = (String) jTabTarefas.getValueAt(linha, 6);

            //Criar e preenche o objeto tarefa com os dados selecionados.
            tarefa = new Tarefa();
            tarefa.setId(id);
            tarefa.setTitulo(titulo);
            tarefa.setDescricao(descricao);
            tarefa.setDataTarefa(dtTarefa);
            tarefa.setHoraInicio(hInicio);
            tarefa.setHoraFim(hFim);
            tarefa.setStatus(status);

            //Preenche os campos de texto do form.
            jTFid.setText(String.valueOf(id));
            jTFtarefa.setText(titulo);
            jTFdescricao.setText(descricao);
            jDateTarefa.setDate(ConversorData.converterLocalDateParaDate(dtTarefa));
            jTFhoraInicio.setText(String.valueOf(hInicio));
            jTFhoraFim.setText(String.valueOf(hFim));
            jCBStatusP.setSelectedItem(String.valueOf(status));
            habilitarCampos();
        }
    }

    private void limparcampos() {
        jTFid.setText("");
        jTFtarefa.setText("");
        jTFdescricao.setText("");
        jTFhoraInicio.setText("");
        jTFhoraFim.setText("");
        jDateTarefa.setDate(null);
        jDCdtInicio.setDate(null);
        jDCdtFim.setDate(null);
        jDCdtInicio.setEnabled(false);
        jDCdtFim.setEnabled(false);
        btGroupPesquisar.clearSelection();
        jCBdatas.setSelectedIndex(0);
        jCBdatas.setEnabled(true);
        jRBporData.setSelected(true);
        jCBStatusP.setSelectedIndex(0);

    }

    private void excluirTarefa() {
        DAOTarefa dao = new DAOTarefa();
        int linha = jTabTarefas.getSelectedRow();

        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Um Registro deve ser selecionado.", "Atenção", JOptionPane.ERROR_MESSAGE);
        } else {
            int id = (int) jTabTarefas.getValueAt(linha, 0);

            if (id != 0) {
                //Cria e preenche o objeto tarefa com os dados selecionados.
                this.tarefa = new Tarefa();
                //tarefa.getId();

                UIManager.put("OptionPane.yesButtonText", "Sim");
                UIManager.put("OptionPane.noButtonText", "Não");
                int op = JOptionPane.showConfirmDialog(null, "Tem certeza que desaja excluir a tarefa ?", "Atenção", JOptionPane.YES_NO_OPTION);
                if (op == 0) {
                    tarefa.setId(id);
                    dao.excluirTarefaDAO(tarefa.getId());
                    atualizarTabela();
                    JOptionPane.showMessageDialog(null, "Cadastro excluido com sucesso.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao excluir cadastro.", "Atenção", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void aplicarFormatoDataBR(JTable tabela, int indiceColunaData) {
        tabela.getColumnModel().getColumn(indiceColunaData).setCellRenderer(new DefaultTableCellRenderer() {
            private final DateTimeFormatter formatoBR = DateTimeFormatter.ofPattern("dd/MM/yyyy");

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {

                if (value instanceof LocalDate) {
                    value = ((LocalDate) value).format(formatoBR);
                }
                return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            }
        });
    }

    private void preencherComboDatas() {
        ArrayList<LocalDate> datas = new DAOTarefa().listarDatasTarefasDAO();
        DateTimeFormatter formatador = DateTimeFormatter.ofPattern("dd/MM/yyyy");

        for (LocalDate data : datas) {
            jCBdatas.addItem(data.format(formatador));
        }

    }

    private void pesquisarTarefas() {
        ViewTarefas viewTarefa = new ViewTarefas();

        this.dispose(); //Fechar viewTarefas

        int op = 0;
        if (op == 0) {
            viewTarefa.setVisible(true);
            viewTarefa.setLocationRelativeTo(this);
        }
    }

    private void tarefasPesquisar() {

        if (jRBporData.isSelected()) {
            dataperiodo = "data";
        } else if (jRBporPeriodo.isSelected()) {
            dataperiodo = "periodo";
        }
        DateTimeFormatter formatador = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        DefaultTableModel model = (DefaultTableModel) jTabTarefas.getModel();
        model.setRowCount(0);

        if (dataperiodo.equals("data")) {
            // pesquisa por data única
            String dataSelecionada = (String) jCBdatas.getSelectedItem();
            if (dataSelecionada != null && !dataSelecionada.isEmpty()) {
                try {
                    LocalDate dataT = LocalDate.parse(dataSelecionada, formatador);
                    DAOTarefa dao = new DAOTarefa();
                    lista = dao.listarTarefasDataDAO(dataT);

                    for (Tarefa tarefa1 : lista) {
                        model.addRow(new Object[]{
                            tarefa1.getId(),
                            tarefa1.getTitulo(),
                            tarefa1.getDescricao(),
                            tarefa1.getDataTarefa(),
                            tarefa1.getHoraInicio(),
                            tarefa1.getHoraFim(),
                            tarefa1.getStatus()
                        });
                    }
                    aplicarFormatoDataBR(jTabTarefas, 3);
                } catch (DateTimeParseException e) {
                    JOptionPane.showMessageDialog(null, "Data inválida!", "Erro", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Data inválida!", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        } else if (dataperiodo.equals("periodo")) {
            Date inicio = jDCdtInicio.getDate();
            Date fim = jDCdtFim.getDate();

            if (inicio != null && fim != null) {
                LocalDate dataInicio = inicio.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                LocalDate dataFim = fim.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

                if (dataFim.isBefore(dataInicio)) {
                    JOptionPane.showMessageDialog(null, "A data final não pode ser menor que a data inicial", "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                DAOTarefa dao = new DAOTarefa();
                lista = dao.listarTarefasPorIntervalo(dataInicio, dataFim);

                for (Tarefa t1 : lista) {
                    model.addRow(new Object[]{
                        t1.getId(),
                        t1.getTitulo(),
                        t1.getDescricao(),
                        t1.getDataTarefa(),
                        t1.getHoraInicio(),
                        t1.getHoraFim(),
                        t1.getStatus()
                    });
                }

                aplicarFormatoDataBR(jTabTarefas, 3);

            } else {
                JOptionPane.showMessageDialog(null, "Preencha as duas datas do periodo !", "Aviso", JOptionPane.WARNING_MESSAGE);
            }

        }

    }
    //Desablilitar campos após edição e salvamento da tarefa.

    private void habilitarCampos() {
        jTFdescricao.setEnabled(true);
        jTFhoraInicio.setEnabled(true);
        jTFhoraFim.setEnabled(true);
        jTFtarefa.setEnabled(true);
        jBtAtualizar.setEnabled(true);
        jDateTarefa.setEnabled(true);
        jCBStatusP.setEnabled(true);
    }

    private void desabilitarCampos() {
        jTFdescricao.setEnabled(false);
        jTFhoraInicio.setEnabled(false);
        jTFhoraFim.setEnabled(false);
        jTFtarefa.setEnabled(false);
        jBtAtualizar.setEnabled(false);
        jDateTarefa.setEnabled(false);
        jCBStatusP.setEnabled(false);
    }
}
